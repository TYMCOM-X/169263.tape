(*------------------------------------------------------------------*)
(* INCLUDE FILE DEFINING TYPES AND ROUTINES FOR PASCAL-10
   RANDOM I/O PACKAGE *)
  (*DEFINITION OF TYPES IOBLOCK AND IOBLOCKSIZE REQUIRED BEFORE NOW*)
CONST IOFILEMAX = 27;  (*MAXIMUM FILE NAME BUFFER LENGTH*)
TYPE
  IOFILEID = 1..15;
  IOFILEPTR = -1..377777777777B;  (* -1 INDICATES EMPTY FILE *)
  IOERRCODE = (IONOERR,IOERR,IOEOF);
  IOMODE = (IOIN,IOOUT,IOINOUT);
  IOCONT = (IODEL,IONODEL);
  IOFILE = PACKED ARRAY[1..IOFILEMAX] OF CHAR;

(*PROCEDURES ... *)

PROCEDURE PASOPN(VAR ERRCODE: IOERRCODE; VAR FILEID: IOFILEID;
  MODE: IOMODE; CONT: IOCONT;   FILENAME: IOFILE); EXTERN;
PROCEDURE PASCLS(VAR ERRCODE: IOERRCODE; FILEID: IOFILEID;
  CONT: IOCONT); EXTERN;
PROCEDURE RDRAND(VAR ERRCODE: IOERRCODE; FILEID: IOFILEID;
  VAR BLOCK: IOBLOCK; BLOCKSIZE: IOBLOCKSIZE; VAR FILEPTR: IOFILEPTR);
  EXTERN;
PROCEDURE WRRAND(VAR ERRCODE: IOERRCODE; FILEID: IOFILEID;
  VAR BLOCK: IOBLOCK; BLOCKSIZE: IOBLOCKSIZE; VAR FILEPTR: IOFILEPTR);
  EXTERN;
PROCEDURE RDNEXT(VAR ERRCODE: IOERRCODE; FILEID: IOFILEID;
  VAR BLOCK: IOBLOCK; VAR BLOCKSIZE: IOBLOCKSIZE); EXTERN;
PROCEDURE WRNEXT(VAR ERRCODE: IOERRCODE; FILEID: IOFILEID;
  VAR BLOCK: IOBLOCK; BLOCKSIZE: IOBLOCKSIZE); EXTERN;
PROCEDURE GETSTA(VAR ERRCODE: IOERRCODE; FILEID: IOFILEID;
  VAR CURSOR, EOFPTR: IOFILEPTR; VAR MODE: IOMODE); EXTERN;
PROCEDURE SETSTA(VAR ERRCODE: IOERRCODE; FILEID: IOFILEID;
  CURSOR: IOFILEPTR); EXTERN;
(*------------------------------------------------------------------*)
