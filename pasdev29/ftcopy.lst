MAIN. 	FTCOPY.FOR	FORTRAN V.50A(530004) /KI	5-NOV-81	16:33	PAGE 1


00001		IMPLICIT INTEGER (A-Z)
00002	
00003		INTEGER RECORD	(500)
00004		INTEGER DSKREC	(256)
00005		INTEGER CMD	(2)
00006		INTEGER FILBLK	(2)
00007		INTEGER IFILE	(2)
00008	
00009		LOGICAL	TTYFLG
00010	
00011		COMMON /FLAG/	TTYFLG
00012	
00013		DATA TTYFLG	/.FALSE./
00014	
00015		CALL ECHO (0)
00016		CALL ACKLIN
00017	C	WRITE (5,9000)
00018	9000	FORMAT ('+ACK',/)
00019		CALL NOCRLF
00020		CALL YUCK('CURTS VERSION OF XFER',21)
00021	C
00022	C
00023		CALL INREC (RECORD,E,ISIZE,ITYPE,.FALSE.)
00024		IF (E .EQ. 0) GO TO 10
00025	C	  WRITE (5,9001) E,ISIZE,ITYPE,(RECORD(I),I=1,5)
00026		CALL YUCK ('NO INITIAL ACK',14)	! Nexer to return
00027	9001	FORMAT (' ',I1,I4,1X,A1,1X,5A5)
00028	C
00029	10	IF (ITYPE .EQ. 'C') GO TO 20
00030		  CALL YUCK ('Not a Communications record',27)	! Never to return
00031	C
00032	C
00033	20	CALL GETCOM (RECORD,ISIZE,CMD)
00034		IF (CMD(1) .EQ. 'ACK') GO TO 40
00035		  CALL YUCK ('ACK not received',16)	! Never to return
00036	C
00037	C
00038	40	CALL ENCODE (RECORD,'TYM-1','S',5,ISIZE)
00039		CALL OUTREC (RECORD)
00040	C
00041	C
00042	45	CALL INREC (RECORD,E,ISIZE,ITYPE,.FALSE.)
00043		IF (E.EQ.0 .AND. ITYPE.EQ.'C') GO TO 60
00044		  CALL YUCK ('Version not acknowledged',24)	! Never to return
00045	C
00046	50	CALL INREC (RECORD,E,ISIZE,ITYPE,.FALSE.)
00047		IF (E.EQ.0 .AND. ITYPE.EQ.'C') GO TO 60
00048		  CALL YUCK ('ILLEGAL COMMAND',15)	! Never to return
00049	C
00050	C
00051	60	CALL GETCOM (RECORD,ISIZE,CMD)
00052		IF (RECORD(1).NE.'EXIT' .AND. RECORD(1).NE.'ABORT') GO TO 70
00053		  CALL ENCODE (RECORD,'ACK','C',3,ISIZE)
00054		  CALL OUTREC (RECORD)
00055		CALL QEXIT
00056		  STOP
MAIN. 	FTCOPY.FOR	FORTRAN V.50A(530004) /KI	5-NOV-81	16:33	PAGE 1-1


00057	C
00058	70	IF (CMD(1) .EQ. 'GET') GO TO 80
00059		  CALL YUCK ('Not a GET',9)	! Never to return
00060	C
00061	C
00062	80	CALL GETFIL (RECORD,ISIZE,IFILE)
00063		CALL MAKFIL (IFILE,FILBLK)
00064		IS = FILSIZ (FILBLK,IERR)
00065		OPEN (UNIT=1,DEVICE='DSK',FILE=IFILE,MODE='IMAGE',ACCESS='RANDIN',
00066	     &		RECORDSIZE=1,ERR=90)
00067		GO TO 100
00068	C
00069	C
00070	90	  CALL ENCODE (RECORD,'NEW','C',3,ISIZE)
00071		  CALL OUTREC (RECORD)
00072		CALL INREC (RECORD,E,ISIZE,ITYPE,.FALSE.)
00073		IF (RECORD(1) .NE. 'ABORT') CALL QEXIT
00074		    CALL ENCODE (RECORD,'ACK','C',3,ISIZE)
00075		  CALL OUTREC (RECORD)
00076		    GO TO 50
00077		  STOP
00078	C
00079	C
00080	100	CALL ENCODE (RECORD,'OLDBIN','C',6,ISIZE)
00081		CALL OUTREC (RECORD)
00082		CALL INREC (RECORD,E,ISIZE,ITYPE,.FALSE.)
00083		CALL GETCOM (RECORD,ISIZE,CMD)
00084		IF (CMD(1) .EQ. 'ACK') GO TO 105
00085		  CALL YUCK ('File opening ACK not acknowledged',33)	! Never to return
00086	C
00087	105	ADDR = 1
00088		REM = IS
00089	110	CALL GETDIR (1,DSKREC,ADDR,IS,256,CNT,REM)
00090		DO 140 I = 1,CNT,32
00091		  WDCNT = 32
00092		  IF ((I+31) .GT. CNT) WDCNT = (CNT-I) + 1
00093	120	  CALL MAKREC (DSKREC(I),WDCNT,RECORD)
00094	125	  CALL OUTREC (RECORD)
00095		  CALL INREC (RECORD,E,ISIZE,ITYPE,.FALSE.)
00096		  CALL GETCOM (RECORD,ISIZE,CMD)
00097		  IF (CMD(1) .EQ. 'ACK') GO TO 140
00098		    IF (CMD(1) .EQ. 'NAK') GO TO 120
00099		      IF (CMD(1) .EQ. 'ABORT') GO TO 130
00100		      CALL YUCK ('Cannot send block',17)	! Never to return
00101	130	  CALL ENCODE (RECORD,'ACK','C',3,ISIZE)
00102		CALL OUTREC (RECORD)
00103		GO TO 50
00104	140	  CONTINUE
00105	C
00106		IF (REM .GT. 0) GO TO 110
00107	C
00108		CALL ENCODE (RECORD,'EOF','C',3,ISIZE)
00109		CALL OUTREC (RECORD)
00110		GO TO 50
00111		END
MAIN. 	FTCOPY.FOR	FORTRAN V.50A(530004) /KI	5-NOV-81	16:33	PAGE 1-2




COMMON BLOCKS

/FLAG/(+1)
TTYFLG	+0

SUBPROGRAMS CALLED

ECHO	QEXIT	FILSIZ	NOCRLF	YUCK	ENCODE
INREC	MAKREC	GETFIL	ACKLIN	MAKFIL	OUTREC
GETCOM	GETDIR	

SCALARS AND ARRAYS [ "*" NO EXPLICIT DEFINITION - "%" NOT REFERENCED ]

*ITYPE	1	*E	2	*CNT	3	 DSKREC	4	*ISIZE	404	
*WDCNT	405	 .S0000	406	*IERR	407	*ADDR	410	*REM	411	
 RECORD	412	*IS	1376	 IFILE	1377	*I	1401	 FILBLK	1402	
 CMD	1404	

TEMPORARIES

 .Q0000	1415	

MAIN. 	[ NO ERRORS DETECTED ]
GETDIR	FTCOPY.FOR	FORTRAN V.50A(530004) /KI	5-NOV-81	16:33	PAGE 1


00001		SUBROUTINE GETDIR (UNIT,DIR,DPTR,NE,MAX,CNT,REM)
00002		IMPLICIT INTEGER (A-Z)
00003	
00004		INTEGER DIR	(MAX)
00005	
00006		CNT = 0
00007		IF (NE .LE. 0) RETURN
00008	
00009		CPTR = DPTR
00010		IF (REM .NE. 0) CPTR = CPTR + (NE-REM)
00011		CNT = REM
00012		IF (CNT .GT. MAX) CNT = MAX
00013		DO 5 I = 1,CNT
00014		  READ (UNIT#CPTR+(I-1)) DIR(I)
00015	5	  CONTINUE
00016	8	REM = REM - CNT
00017	10	RETURN
00018		END


SUBPROGRAMS CALLED



SCALARS AND ARRAYS [ "*" NO EXPLICIT DEFINITION - "%" NOT REFERENCED ]

*UNIT	1	 DIR	2	*CNT	3	*MAX	4	*CPTR	5	
*NE	6	 .S0000	7	*REM	10	 .I0001	11	*I	12	
 .I0000	13	*DPTR	14	

TEMPORARIES

 .A0016	15	 .Q0000	16	

GETDIR	[ NO ERRORS DETECTED ]
ENCODE	FTCOPY.FOR	FORTRAN V.50A(530004) /KI	5-NOV-81	16:33	PAGE 1


00001		SUBROUTINE ENCODE (RECORD,STRING,ITYPE,ISIZE,III)
00002		IMPLICIT INTEGER (A-Z)
00003	
00004		INTEGER RECORD	(500)
00005		integer string	(2)
00006	
00007		DO 10 I = 1,500
00008		  RECORD(I) = ' '
00009	10	  CONTINUE
00010	C
00011	C
00012		CALL GETC (1,ITYPE,TMP)
00013		CALL GETC (1,ITYPE,RECORD(1))
00014		CK = RECORD(1)
00015		DO 20 I = 1,ISIZE
00016		  CALL GETC (I,STRING(1),RECORD(I+3))
%FTNDIM LINE:00016 POSSIBLE DO INDEX MODIFICATION INSIDE LOOP
00017		  CK = IXOR (CK,RECORD(I+3))
00018	20	  CONTINUE
00019		MSIZE = ISIZE + 2
00020		record(2) = msize
00021		RECORD(3) = IXOR(CK,RECORD(2))
00022		RETURN
00023		END


SUBPROGRAMS CALLED

GETC
IXOR	

SCALARS AND ARRAYS [ "*" NO EXPLICIT DEFINITION - "%" NOT REFERENCED ]

%III		*MSIZE	1	*ITYPE	2	*CK	3	*ISIZE	4	
*TMP	5	 .S0001	6	 .S0000	7	 STRING	10	 RECORD	11	
*I	12	

TEMPORARIES

 .A0016	13	 .Q0000	14	

%FTNWRN   ENCODE	NO FATAL ERRORS AND 1 WARNINGS
INREC 	FTCOPY.FOR	FORTRAN V.50A(530004) /KI	5-NOV-81	16:33	PAGE 1


00001		SUBROUTINE INREC (RECORD,E,ISIZE,ITYPE,HIBFLG)
00002		IMPLICIT INTEGER (A-Z)
00003	
00004		INTEGER RECORD	(500)
00005		INTEGER TYPE	(5)
00006		INTEGER INLINE	(30)
00007	
00008		LOGICAL HIBFLG
00009		LOGICAL HIBERN
00010	
00011		DATA TYPE /"102,"103,"120,"123,"130/
00012	
00013		isize = 0
00014		itype = ' '
00015		e = 0
00016		
00017		IF (.NOT. HIBFLG) GO TO 5
00018		IF (.NOT. HIBERN(30)) GO TO 40
00019	C
00020	5	DO 35 K = 1,2
00021		READ (5,9000) INLINE
00022	9000	FORMAT (30A5)
00023		DO 30 I = 30,1,-1
00024	10	  IF (INLINE(I) .EQ. ' ') GO TO 30
00025		  DO 20 J = 5,1,-1
00026		    CALL GETC (J,INLINE(I),TMP)
%FTNDIM LINE:00026 POSSIBLE DO INDEX MODIFICATION INSIDE LOOP
00027		    IF (TMP .EQ. "40) GO TO 20
00028		      CHRCNT = (I-1)*5 + J
00029		      GO TO 100
00030	20	    CONTINUE
00031		    E = 2
00032	30	  CONTINUE
00033	35	CONTINUE
00034	40	E = 5
00035	50	RETURN
00036	C
00037	C
00038	100	CALL GETC (1,INLINE(1),TMP)
00039		DO 110 I = 1,5
00040		  IF (TMP .EQ. TYPE(I)) GO TO 130
00041	110	  CONTINUE
00042		  E = 1
00043		  RETURN
00044	C
00045	C
00046	130	CALL PUTC (1,ITYPE,TMP)
00047		CALL GETC (2,INLINE(1),IS)
00048		ACCUM = IXOR (TMP,IS)
00049		CALL GETC (3,INLINE(1),CK)
00050		IS = IS - "41
00051		IF (IS .EQ. (CHRCNT-1)) GO TO 135
00052		  E = 2
00053		  RETURN
00054	C
00055	135	IF (TMP .NE. "103) GO TO 200
INREC 	FTCOPY.FOR	FORTRAN V.50A(530004) /KI	5-NOV-81	16:33	PAGE 1-1


00056	C
00057	C
00058	C   Process a Communications record
00059	C
00060	C
00061		DO 140 I = 1,10
00062		  RECORD(I) = ' '
00063	140	  CONTINUE
00064	C
00065		DO 150 I = 4,IS+1
00066		  CALL GETC (I,INLINE(1),TMP)
%FTNDIM LINE:00066 POSSIBLE DO INDEX MODIFICATION INSIDE LOOP
00067		  ACCUM = IXOR (ACCUM,TMP)
00068		  CALL PUTC (I-3,RECORD(1),TMP)
00069	150	  CONTINUE
00070	160	ACCUM = IAND (ACCUM,"77)
00071		CK = IAND (CK-"41,"77)
00072		IF (ACCUM .NE. CK) E = 3
00073		ISIZE = IS - 2
00074		RETURN
00075	C
00076	C
00077	C
00078	200	DO 210 I = 1,24
00079		  RECORD(I) = 0
00080	210	  CONTINUE
00081	C
00082		IWD = 1
00083		IPOS = 0
00084		DO 250 I = 4,IS+1
00085		  CALL GETC (I,INLINE(1),TMP)
%FTNDIM LINE:00085 POSSIBLE DO INDEX MODIFICATION INSIDE LOOP
00086		  TMP = TMP - "41
00087		  ACCUM = IXOR (ACCUM,TMP)
00088		  CALL SETBIT (RECORD(IWD),IPOS,6,TMP)
00089		  IPOS = IPOS + 6
00090		  IF (IPOS .LT. 36) GO TO 250
00091		    IPOS = 0
00092		    IWD = IWD + 1
00093	250	  CONTINUE
00094	C
00095		ACCUM = IAND (ACCUM,"77)
00096		CK = IAND(CK,"77)
00097		IF (ACCUM .NE. CK) E = 3
00098		ISIZE = IS - 2
00099		RETURN
00100		END


SUBPROGRAMS CALLED

SETBIT
GETC	PUTC	IAND	IXOR	HIBERN	
INREC 	FTCOPY.FOR	FORTRAN V.50A(530004) /KI	5-NOV-81	16:33	PAGE 1-2



SCALARS AND ARRAYS [ "*" NO EXPLICIT DEFINITION - "%" NOT REFERENCED ]

*IWD	1	*K	2	*ITYPE	3	*E	4	*CK	5	
*CHRCNT	6	*ISIZE	7	 INLINE	10	*TMP	46	*J	47	
 .S0007	50	*ACCUM	51	 .S0006	52	 .S0005	53	 .S0004	54	
 .S0003	55	 .S0002	56	 .S0001	57	 .S0000	60	*IPOS	61	
 TYPE	62	 HIBFLG	67	 RECORD	70	*IS	71	*I	72	


TEMPORARIES

 .A0016	75	 .Q0000	76	

%FTNWRN   INREC 	NO FATAL ERRORS AND 3 WARNINGS
OUTREC	FTCOPY.FOR	FORTRAN V.50A(530004) /KI	5-NOV-81	16:33	PAGE 1


00001		SUBROUTINE OUTREC (RECORD)
00002		IMPLICIT INTEGER (A-Z)
00003	
00004		INTEGER RECORD	(500)
00005	
00006		LOGICAL TTYFLG
00007	
00008		COMMON /FLAG/	TTYFLG
00009		COMMON /BSIZES/	REALLN
00010	
00011		LEN = RECORD(2) + 1
00012		IF (REALLN .NE. 0) LEN = REALLN
00013		REALLN = 0
00014		IF (TTYFLG) GO TO 100
00015	
00016	C       CALL WAIT10
00017		DO 50 I = 1,LEN
00018		  CALL W8LEV (RECORD(I))
00019	50	  CONTINUE
00020		CALL W8LEV ("36)
00021		RETURN
00022	C
00023	C
00024	100	TYPE 9000,LEN
00025		WRITE (5,9001) (RECORD(I),I=1,LEN)
00026		RETURN
00027		
00028	C
00029	C
00030	
00031	
00032	9000	FORMAT (' SIZE= ',I5)
00033	9001	FORMAT (10(' ',O3))
00034		END


COMMON BLOCKS

/FLAG/(+1)
TTYFLG	+0
/BSIZES/(+1)
REALLN	+0

SUBPROGRAMS CALLED

W8LEV	

SCALARS AND ARRAYS [ "*" NO EXPLICIT DEFINITION - "%" NOT REFERENCED ]

*LEN	1	 .S0001	2	 .S0000	3	 RECORD	4	*I	5	

OUTREC	FTCOPY.FOR	FORTRAN V.50A(530004) /KI	5-NOV-81	16:33	PAGE 1-1



TEMPORARIES

 .A0016	14	 .Q0000	15	

OUTREC	[ NO ERRORS DETECTED ]
GETCOM	FTCOPY.FOR	FORTRAN V.50A(530004) /KI	5-NOV-81	16:33	PAGE 1


00001		SUBROUTINE GETCOM (RECORD,ISIZE,CMD)
00002		IMPLICIT INTEGER (A-Z)
00003	
00004		INTEGER RECORD	(500)
00005		INTEGER CMD	(2)
00006	
00007		DATA GET	/'GET'/
00008		DATA RESTA1	/'RESTA'/
00009		DATA RESTA2	/'RT'/
00010		DATA ACK	/'ACK'/
00011		DATA NAK	/'NAK'/
00012		DATA CKS	/'CKS'/
00013		DATA NEW	/'NEW'/
00014		DATA OLD	/'OLD'/
00015		DATA TYPE	/'BIN'/
00016		DATA EOF	/'EOF'/
00017		DATA ABORT	/'ABORT'/
00018	
00019		CMD(1) = ' '
00020		CMD (2) = ' '
00021		DO 10 I = 1,3
00022		  CALL GETC (I,RECORD,TMP)
%FTNDIM LINE:00022 POSSIBLE DO INDEX MODIFICATION INSIDE LOOP
00023		  CALL PUTC (I,CMD(1),TMP)
%FTNDIM LINE:00023 POSSIBLE DO INDEX MODIFICATION INSIDE LOOP
00024	10	  CONTINUE
00025	C
00026		IF (CMD(1) .EQ. 'ABO') GO TO 20
00027		  IF (CMD(1) .EQ. 'RES') GO TO 30
00028		    RETURN
00029	C
00030	20	CMD(1) = ABORT
00031		RETURN
00032	C
00033	30	CMD(1) = RESTA1
00034		CMD(2) = RESTA2
00035		RETURN
00036		END


SUBPROGRAMS CALLED

GETC
PUTC	

SCALARS AND ARRAYS [ "*" NO EXPLICIT DEFINITION - "%" NOT REFERENCED ]

*OLD	1	*ABORT	2	*NAK	3	*ACK	4	%ISIZE		
*GET	5	*EOF	6	*RESTA1	7	*TMP	10	*CKS	11	
*RESTA2	12	 .S0000	13	*TYPE	14	 RECORD	15	*I	16	
*NEW	17	 CMD	20	
GETCOM	FTCOPY.FOR	FORTRAN V.50A(530004) /KI	5-NOV-81	16:33	PAGE 1-1



TEMPORARIES

 .A0016	21	

%FTNWRN   GETCOM	NO FATAL ERRORS AND 2 WARNINGS
GETFIL	FTCOPY.FOR	FORTRAN V.50A(530004) /KI	5-NOV-81	16:33	PAGE 1


00001		SUBROUTINE GETFIL (RECORD,ISIZE,FILE)
00002		IMPLICIT INTEGER (A-Z)
00003	
00004		INTEGER RECORD	(500)
00005		INTEGER FILE	(2)
00006	
00007		FILE(1) = ' '
00008		FILE(2) = ' '
00009		DO 10 I = 4,ISIZE
00010		  CALL GETC (I,RECORD(1),TMP)
%FTNDIM LINE:00010 POSSIBLE DO INDEX MODIFICATION INSIDE LOOP
00011		  CALL PUTC (I-3,FILE,TMP)
00012	10	  CONTINUE
00013	20	  RETURN
00014		  END


SUBPROGRAMS CALLED

GETC
PUTC	

SCALARS AND ARRAYS [ "*" NO EXPLICIT DEFINITION - "%" NOT REFERENCED ]

 FILE	1	*ISIZE	2	*TMP	3	 .S0000	4	 RECORD	5	
*I	6	

TEMPORARIES

 .A0016	7	 .Q0000	10	

%FTNWRN   GETFIL	NO FATAL ERRORS AND 1 WARNINGS
MAKREC	FTCOPY.FOR	FORTRAN V.50A(530004) /KI	5-NOV-81	16:33	PAGE 1


00001		SUBROUTINE MAKREC (INREC,WDCNT,RECORD)
00002		IMPLICIT INTEGER (A-Z)
00003	
00004		INTEGER INREC	(32)
00005		INTEGER RECORD	(500)
00006		INTEGER TEMP	(32)
00007	
00008		COMMON /BSIZES/	REALLN
00009		DATA B	/"102/
00010	
00011		DO 10 I = 1,500
00012		  RECORD(I) = 0
00013	10	  CONTINUE
00014	
00015		REALLN = 0
00016		RECORD(1) = B
00017		CK = B
00018		IF (MOD(WDCNT,2) .NE. 0) INREC(WDCNT+1) = 0
00019		RECORD(2) = (WDCNT/2)*9 + 2
00020	15	IF (MOD(WDCNT,2) .NE. 0) RECORD(2) = RECORD(2) + 5
00021		PTR = 4
00022		SKIP = 0
00023		IF (RECORD(2) .NE. "200) GO TO 20
00024		  RECORD(3) = "200
00025		  PTR = PTR + 1
00026		  SKIP = 1
00027		  REALLN = REALLN + 1
00028	20	DO 100 I = 1,WDCNT,2
00029		  CALL MAK8WD (INREC(I),INREC(I+1),TEMP(1))
00030		  DO 50 J = 1,9
00031		  CK = IXOR(CK,TEMP(J))
00032		    IF (TEMP(J) .EQ. "200) GO TO 30
00033		      IF (TEMP(J) .NE. "36) GO TO 40
00034			RECORD(PTR) = "200
00035			RECORD(PTR+1) = 0
00036			REALLN = REALLN + 1
00037			PTR = PTR + 2
00038			GO TO 50
00039	30	      RECORD(PTR) = "200
00040		      RECORD(PTR+1) = "200
00041		      REALLN = REALLN + 1
00042		      PTR = PTR + 2
00043		      GO TO 50
00044	40	    RECORD(PTR) = TEMP(J)
00045		    PTR = PTR + 1
00046	50	  CONTINUE
00047	100	CONTINUE
00048	150	RECORD(3+SKIP) = IXOR(CK,RECORD(2))
00049		IF(RECORD(3+SKIP).NE."36.AND.RECORD(3+SKIP).NE."200)GO TO 200
00050		  DO 180 I = PTR-1,4,-1
00051		    RECORD(I+1) = RECORD(I)
00052	180	    CONTINUE
00053		  PTR = PTR + 1
00054		  REALLN = REALLN + 1
00055		  RECORD(4+SKIP) = 0
00056		  IF (RECORD(3+SKIP) .EQ. "200) RECORD(4+SKIP) = "200
MAKREC	FTCOPY.FOR	FORTRAN V.50A(530004) /KI	5-NOV-81	16:33	PAGE 1-1


00057		  RECORD(3+SKIP) = "200
00058	200	REALLN = RECORD(2) + REALLN + 1
00059		RETURN
00060		END


COMMON BLOCKS

/BSIZES/(+1)
REALLN	+0

SUBPROGRAMS CALLED

MOD.	IXOR	MAK8WD	

SCALARS AND ARRAYS [ "*" NO EXPLICIT DEFINITION - "%" NOT REFERENCED ]

*PTR	1	*B	2	*CK	3	 INREC	4	*J	5	
*WDCNT	6	 .S0003	7	 .S0002	10	 .S0001	11	 .S0000	12	
 TEMP	13	 RECORD	53	 .I0000	54	*I	55	*SKIP	56	


TEMPORARIES

 .A0016	57	 .Q0000	60	 .Q0001	61	

MAKREC	[ NO ERRORS DETECTED ]
MAKFIL	FTCOPY.FOR	FORTRAN V.50A(530004) /KI	5-NOV-81	16:33	PAGE 1


00001		subroutine makfil (filnam,filblk)
00002		IMPLICIT INTEGER (A-Z)
00003	
00004		INTEGER FILNAM	(2)
00005		INTEGER FILBLK	(2)
00006	
00007		LOGICAL AFTDOT
00008	
00009		IPOS = 0
00010		FILBLK(1) = 0
00011		FILBLK(2) = 0
00012		AFTDOT = .FALSE.
00013	
00014		DO 15 I = 1,10
00015		  CALL GETC (I,FILNAM(1),CH)
%FTNDIM LINE:00015 POSSIBLE DO INDEX MODIFICATION INSIDE LOOP
00016		  IF (CH .EQ. "40) GO TO 20
00017		    IF (AFTDOT) GO TO 10
00018		      IF (CH .EQ. "56) GO TO 5
00019		        CALL SETBIT (FILBLK(1),IPOS,6,CH-"40)
00020		        IPOS = IPOS + 6
00021		        GO TO 15
00022	5	      aftdot = .TRUE.
00023		      IPOS = 0
00024		      GO TO 15
00025	10	    CALL SETBIT (FILBLK(2),IPOS,6,CH-"40)
00026		    IPOS = IPOS + 6
00027	15	  CONTINUE
00028	C
00029	20	RETURN
00030		END


SUBPROGRAMS CALLED

SETBIT
GETC	

SCALARS AND ARRAYS [ "*" NO EXPLICIT DEFINITION - "%" NOT REFERENCED ]

 FILNAM	1	 AFTDOT	2	 .S0000	3	*IPOS	4	*CH	5	
*I	6	 FILBLK	7	

TEMPORARIES

 .A0016	10	 .Q0000	11	 .Q0001	12	

%FTNWRN   MAKFIL	NO FATAL ERRORS AND 1 WARNINGS
YUCK  	FTCOPY.FOR	FORTRAN V.50A(530004) /KI	5-NOV-81	16:33	PAGE 1


00001		SUBROUTINE YUCK (STRING,CNT)
00002		IMPLICIT INTEGER (A-Z)
00003	
00004		INTEGER STRING	(10)
00005		INTEGER RECORD	(500)
00006	
00007		CALL ENCODE (RECORD,STRING,'Z',CNT,ISIZE)
00008		CALL OUTREC (RECORD)
00009		CALL QEXIT
00010		STOP
00011		END


SUBPROGRAMS CALLED

QEXIT
ENCODE	OUTREC	

SCALARS AND ARRAYS [ "*" NO EXPLICIT DEFINITION - "%" NOT REFERENCED ]

*CNT	1	*ISIZE	2	 STRING	3	 RECORD	4	

TEMPORARIES

 .A0016	770	

YUCK  	[ NO ERRORS DETECTED ]
