*VALDEF     VAXCG.TYP
*DEFVAL     VAXCG.TYP
*ASSERT     VAXCG.TYP
 TRACE     
 ASS_FAILUR
*LEN_BYTES  VAXSET
 NGM       
*BYTE_NUM   VAXSET
*UPB        VAXSET
*LEN        VAXSET
 ASSERT    
*SETB_SIZE  VAXSET
 LEN_BYTES 
*GENSET_OP_ VAXSET
 GENSET_OP_
*SHAPE_GEN_ VAXSET
 GENSET_OP_
 ASSERT    
 LEN       
*SHAPE_SET  VAXSET
 SHAPE_SET 
 SHAPE_GEN_
 SHAPE_GEN_
 SHAPE_GEN_
 UPB       
 LEN       
 UPB       
 SHAPE_SET 
 SHAPE_SET 
 SHAPE_SET 
 SHAPE_SET 
 UPB       
 UPB       
 UPB       
 UPB       
 LEN       
 SHAPE_SET 
 UPB       
 LEN       
 ASSERT    
*SET_FREE   VAXSET
 FREE      
*SET_TEMPOR VAXSET
 ASSERT    
 ADR_EQUAL 
 INT_VALUE 
 BYTE_NUM  
 DUPLICATE_
 GET_TEMP  
*GEN_C5     VAXSET
 ASSERT    
 ACONSTP   
 ACONSTP   
 CVT_WORD  
 DUPLICATE_
 CVT_WORD  
 DUPLICATE_
 GEN2      
 GEN2      
 GEN2      
 GEN2      
 GEN2      
 GEN2      
 GEN2      
 SAVE_REGS 
 GEN3      
 RESTORE_RE
 MARK_REGS_
 GEN1      
 GEN1      
 GEN1      
 GEN1      
 GEN1      
 GEN1      
 GEN1      
 SAVE_REGS 
 GEN5      
 TYP_INT_VA
 RESTORE_RE
 MARK_REGS_
 FREE      
 FREE      
*PREP_ADDR  VAXSET
 REGS_USED 
 MOVE_ADDRE
 UPDATE_USA
 UPDATE_USA
*INCREMENTA VAXSET
 IS_DISP_MO
 IS_SYMBOL_
*SET_MOVE   VAXSET
 ASSERT    
 ASSERT    
 ACONSTP   
 GEN_C5    
 INT_VALUE 
 INT_VALUE 
 INCREMENTA
 PREP_ADDR 
 OFFSET_ADD
 DUPLICATE_
 INT_VALUE 
 DUPLICATE_
 ASSERT    
 ACONSTP   
 GEN_C5    
 INT_VALUE 
 INT_VALUE 
 GEN2      
 GEN2      
 GEN2      
 GEN_C5    
 INT_VALUE 
 INT_VALUE 
 FREE      
 MAKE_DEF  
 MAKE_DEF  
 GEN2      
 INT_VALUE 
 GEN_BRANCH
 GEN_C5    
 INT_VALUE 
 GEN_BRANCH
 MARK_DEF  
 GEN_C5    
 INT_VALUE 
 INT_VALUE 
 GEN3      
 INT_VALUE 
 INCREMENTA
 PREP_ADDR 
 OFFSET_ADD
 DUPLICATE_
 INT_VALUE 
 GEN_C5    
 FREE      
 MARK_DEF  
 GEN_C5    
 SET_FREE  
*GEN_CST_SE VAXSET
 MAKE_DEF  
 MARK_DEF  
+NEW       
 GEN_EMIT  
 RELDEF    
 INT_VALUE 
 BYTE_NUM  
 INT_VALUE 
 LEN       
*PREP_BITRE VAXSET
 ACONSTP   
 UPB       
 ACONSTP   
 INT_VALUE 
 GEN3      
 INT_VALUE 
 IS_REGISTE
 GEN2      
 MAKE_DEF  
 GEN1      
 GEN_BRANCH
 ACONSTP   
 GEN2      
 INT_VALUE 
 GEN3      
 INT_VALUE 
 GEN2      
 GEN_BRANCH
*EMIT_INSV  VAXSET
 ASSERT    
 GENSET_OP_
 PREP_BITRE
 ACONSTP   
 BYTE_NUM  
 INCREMENTA
 GEN4      
 INT_VALUE 
 TYP_INT_VA
 OFFSET_ADD
 DUPLICATE_
 INT_VALUE 
 BYTE_NUM  
 GEN2      
 TYP_INT_VA
 GEN2      
 TYP_INT_VA
 FREE      
 MARK_DEF  
*GEN_SET    VAXSET
 ASSERT    
 ACONSTP   
 ACONSTP   
 ACONSTP   
 ADR_EQUAL 
 GEN_C5    
 INT_VALUE 
 EMIT_INSV 
 MOVE_IMMED
 MOVE_IMMED
 BYTE_NUM  
 LEN       
 BYTE_NUM  
 BYTE_NUM  
+NEW       
 BYTE_NUM  
 SET_MOVE  
 GEN_CST_SE
+DISPOSE   
 PUSH_VALUE
 DUPLICATE_
 PUSH_ADDRE
 DUPLICATE_
 PUSH_VALUE
 INT_VALUE 
 PUSH_VALUE
 DUPLICATE_
 PUSH_VALUE
 DUPLICATE_
 GEN_RT    
 SET_FREE  
*CLIP_BITS  VAXSET
 GEN2      
 TYP_INT_VA
 UPB       
 UPB       
 UPB       
 DUPLICATE_
 LEN_BYTES 
 OFFSET_ADD
 INT_VALUE 
 LEN_BYTES 
 GEN2      
 TYP_INT_VA
 FREE      
*MAKE_TEMP_ VAXSET
 ASSERT    
 SET_TEMPOR
 RTIME_BYTE
 GEN_SET   
 SET_MOVE  
*DESIRED    VAXSET
 INT_VALUE 
 BYTE_NUM  
 DUPLICATE_
 RTIME_BYTE
*SINGLETON  VAXSET
 ADR_EQUAL 
*PREP_OPERA VAXSET
 ASSERT    
 SINGLETON 
 ACONSTP   
 RTIME_BYTE
 MAKE_TEMP_
*REVERSE    VAXSET
*CHOOSE_INS VAXSET
 ACONSTP   
 GEN2      
 INT_VALUE 
 GEN3      
 INT_VALUE 
 MAKE_DEF  
 MARK_DEF  
*IN_CONTEXT VAXSET
 BYTE_NUM  
 ADR_EQUAL 
 RTIME_BYTE
*INDEX_ADDR VAXSET
 ASSERT    
 INDEXABLE 
*INTERNAL_S VAXSET
 SET_FREE  
*DO_SET_DIF VAXSET
 DO_SET_FET
 DO_SET_FET
 INTERNAL_S
 INTERNAL_S
 UPB       
 UPB       
 INTERNAL_S
 PREP_OPERA
 PREP_OPERA
 SET_TEMPOR
 RTIME_BYTE
 DESIRED   
 ADR_EQUAL 
 SET_MOVE  
 EMIT_INSV 
 IN_CONTEXT
 MAKE_TEMP_
 ADR_EQUAL 
 IN_CONTEXT
 MAKE_TEMP_
 IN_CONTEXT
 ADR_EQUAL 
 DESIRED   
 SET_TEMPOR
 RTIME_BYTE
 CHOOSE_INS
 ADR_EQUAL 
 DUPLICATE_
 OFFSET_ADD
 INT_VALUE 
 GEN2      
 TYP_OPC   
 INDEX_ADDR
 INDEX_ADDR
 GEN2      
 BRANCH_ADD
 GEN2      
 TYP_OPC   
 FREE      
 GEN3      
 TYP_OPC   
 INDEX_ADDR
 INDEX_ADDR
 INDEX_ADDR
 GEN2      
 BRANCH_ADD
 GEN3      
 TYP_OPC   
 INTERNAL_S
 INTERNAL_S
*DO_INTERSE VAXSET
 DO_SET_FET
 DO_SET_FET
 INTERNAL_S
 INTERNAL_S
 PREP_OPERA
 PREP_OPERA
 IN_CONTEXT
 IN_CONTEXT
 REVERSE   
 DESIRED   
 SET_TEMPOR
 RTIME_BYTE
 ADR_EQUAL 
 REVERSE   
 DUPLICATE_
 DUPLICATE_
 DUPLICATE_
 IN_CONTEXT
 BYTE_NUM  
 GEN_C5    
 INT_VALUE 
 INT_VALUE 
 OFFSET_ADD
 INT_VALUE 
 OFFSET_ADD
 INT_VALUE 
 OFFSET_ADD
 INT_VALUE 
 UPB       
 UPB       
 INT_VALUE 
 LEN       
 UPB       
 BYTE_NUM  
 UPB       
 OFFSET_ADD
 DUPLICATE_
 GEN_C5    
 INT_VALUE 
 INT_VALUE 
 FREE      
 CHOOSE_INS
 GEN2      
 TYP_OPC   
 INDEX_ADDR
 GEN2      
 TYP_OPC   
 INDEX_ADDR
 GEN2      
 BRANCH_ADD
 GEN2      
 TYP_OPC   
 GEN2      
 TYP_OPC   
 GEN2      
 TYP_OPC   
 INDEX_ADDR
 GEN3      
 TYP_OPC   
 INDEX_ADDR
 INDEX_ADDR
 GEN2      
 BRANCH_ADD
 GEN2      
 TYP_OPC   
 GEN3      
 TYP_OPC   
 FREE      
 FREE      
 FREE      
 INTERNAL_S
 INTERNAL_S
 LEN       
 UPB       
 UPB       
*PERFORM_OR VAXSET
 SINGLETON 
 SINGLETON 
 REVERSE   
 PREP_OPERA
 PREP_OPERA
 SET_TEMPOR
 RTIME_BYTE
 DESIRED   
 ADR_EQUAL 
 SET_MOVE  
 EMIT_INSV 
 IN_CONTEXT
 MAKE_TEMP_
 IN_CONTEXT
 MAKE_TEMP_
 IN_CONTEXT
 IN_CONTEXT
 REVERSE   
 IN_CONTEXT
 DESIRED   
 SET_TEMPOR
 RTIME_BYTE
 CHOOSE_INS
 ADR_EQUAL 
 REVERSE   
 ADR_EQUAL 
 DUPLICATE_
 OFFSET_ADD
 INT_VALUE 
 GEN2      
 TYP_OPC   
 INDEX_ADDR
 INDEX_ADDR
 GEN2      
 BRANCH_ADD
 GEN2      
 TYP_OPC   
 FREE      
 GEN3      
 TYP_OPC   
 INDEX_ADDR
 INDEX_ADDR
 INDEX_ADDR
 GEN2      
 BRANCH_ADD
 GEN3      
 TYP_OPC   
 INTERNAL_S
 INTERNAL_S
*DO_UNION   VAXSET
 DO_SET_FET
 UPB       
 ACONSTP   
 ACONSTP   
 BYTE_NUM  
 ACONSTP   
 RTIME_BYTE
 LEN_BYTES 
+NEW       
 BYTE_NUM  
 BYTE_NUM  
 PERFORM_OR
 SINGLETON 
 GEN_CST_SE
 BYTE_NUM  
 PERFORM_OR
+DISPOSE   
 LEN       
*DO_SET_FET VAXSET
 UPB       
 FETCH     
 ASSERT    
 IS_REGISTE
 UPB       
 FREE      
 BYTE_NUM  
 BYTE_NUM  
 OFFSET_ADD
 INT_VALUE 
 INT_VALUE 
 BYTE_NUM  
 BYTE_NUM  
 BYTE_NUM  
 UPB       
 INT_VALUE 
 LEN       
 LEN       
 IN_CONTEXT
 DO_SET_FET
 FETCH_FULL
 DUPLICATE_
 FETCH_FULL
 UPB       
 FREE      
 FREE      
 ACONSTP   
 ACONSTP   
 LEN       
 UPB       
 BYTE_NUM  
 LEN       
 BYTE_NUM  
 DO_UNION  
 DO_INTERSE
 DO_SET_DIF
 ASSERT    
*RTIME_BYTE VAXSET
 BYTE_NUM  
 IS_REGISTE
 GEN2      
 INT_VALUE 
 BYTE_NUM  
 GET_TYP_RE
 GEN3      
 INT_VALUE 
 BYTE_NUM  
 IS_REGISTE
 GEN1      
 GET_TYP_RE
 GEN2      
 MAKE_DEF  
 GEN_BRANCH
 GEN1      
 MARK_DEF  
 IS_REGISTE
 GEN2      
 INT_VALUE 
 GET_TYP_RE
 GEN3      
 INT_VALUE 
 GEN1      
*FIND_RUNTI VAXSET
 INT_VALUE 
 UPB       
 FIND_RUNTI
 FETCH_FULL
 GENSET_OP_
 BYTE_NUM  
 FIND_RUNTI
 FIND_RUNTI
 LOAD_ADDR 
 MAKE_DEF  
 GEN_RM    
 GEN_BRANCH
 GEN_MR    
 MARK_DEF  
 FREE      
 REG_ADDR  
 FIND_RUNTI
 LOAD_ADDR 
 FIND_RUNTI
 MAKE_DEF  
 GEN_RM    
 GEN_BRANCH
 GEN_MR    
 MARK_DEF  
 FREE      
 REG_ADDR  
 ASSERT    
*SET_FETCH  VAXSET
 SHAPE_SET 
 LEN_BYTES 
 INT_VALUE 
 LEN_BYTES 
 BYTE_NUM  
 BYTE_NUM  
 LEN_BYTES 
 FIND_RUNTI
 DO_SET_FET
 SET_FREE  
 FREE      
 FREE      
*SET_ASSIGN VAXSET
 FETCH     
 INT_VALUE 
 BYTE_NUM  
 INT_VALUE 
 SETB_SIZE 
 SET_FETCH 
 GEN_C5    
 INT_VALUE 
 GEN_SET   
 ADR_EQUAL 
 SET_MOVE  
 CLIP_BITS 
 SET_FREE  
*SET_PARAME VAXSET
 LEN       
 LEN_BYTES 
 SET_FETCH 
 SET_TEMPOR
 INT_VALUE 
 GEN_C5    
 INT_VALUE 
 INT_VALUE 
 SET_TEMPOR
 INT_VALUE 
 GEN_SET   
 UPB       
 BYTE_NUM  
 SET_TEMPOR
 INT_VALUE 
 SET_MOVE  
 CLIP_BITS 
 ASSERT    
  